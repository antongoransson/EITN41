import unittest
from B3 import *

class TestB3(unittest.TestCase):

    def test_B3_TLV_der_int1(self):
        i = 2530368937
        enc_int = DER_encode_int(i)
        self.assertEqual(enc_int, "02050096d25da9")

    def test_B3_TLV_der_int2(self):
        i = 161863091426469985001358176493540241719547661391527305133576978132107887717901972545655469921112454527920502763568908799229786534949082469136818503316047702610019730504769581772016806386178260077157969035841180863069299401978140025225333279044855057641079117234814239380100022886557142183337228046784055073741
        enc_int = DER_encode_int(i)
        self.assertEqual(enc_int, "02818100e6802d70d04dea6724d9398116cbdad4a7d824a6846432d8cae83ea9be7027f7bf80082fd9b6ed5a36656dc92e1141290c9437fec219f981c255599849e1b65c64d4184a96f4c0af287577997be19cf500a7997f2e362a2ef263e75af3be6611ded3d18e5e9c02aaee4484593017806531d9a9507c2241806e7cfa7298c9dbcd")

    def test_B3_TLV_der_int3(self):
        DER_codes = ['020100','02085bbe5d05d47d76d7','0203010001','02083669c395b9cf7321', '02050096d25da9', '0205009bb9007f', '020478097601', '0204594b4069', '020458dcf7b4']
        ints = [0, 6610823582647678679, 65537, 3920879998437651233, 2530368937, 2612592767, 2013885953, 1498103913, 1490876340]
        encoded = [DER_encode_int(i) for i in ints]

        self.assertListEqual(encoded, DER_codes)

    def test_B3_cert1(self):
        p = 2530368937
        q = 2612592767
        e = 65537
        b64_msg,_ = calc_priv_key(p, q, e)
        self.assertEqual(b64_msg, "MDwCAQACCFu+XQXUfXbXAgMBAAECCDZpw5W5z3MhAgUAltJdqQIFAJu5AH8CBHgJdgECBFlLQGkCBFjc97Q=")

    def test_B3_cert2(self):
        p = 139721121696950524826588106850589277149201407609721772094240512732263435522747938311240453050931930261483801083660740974606647762343797901776568952627044034430252415109426271529273025919247232149498325412099418785867055970264559033471714066901728022294156913563009971882292507967574638004022912842160046962763
        q = 141482624370070397331659016840167171669762175617573550670131965177212458081250216130985545188965601581445995499595853199665045326236858265192627970970480636850683227427420000655754305398076045013588894161738893242561531526805416653594689480170103763171879023351810966896841177322118521251310975456956247827719
        e = 65537
        b64_msg,_ = calc_priv_key(p, q, e)
        self.assertEqual(b64_msg, "MIIEogIBAAKCAQEAnJf2WUeCeb9wfIwgga8zCXgtw5D3o68JbhjOZRRlRHB9M8uAriE8+wZe3rvkkj0ShlsoP3cr0e4VOXlOYHuMD4dDDOa3dAji00c0x0b1kEcjy1+yuGhphKcI3LZK6rIds/9jO3/p2WbDlEqnV12OQJ/oj0k9Ia6S+OdkSJ89GKwUnRtpARO6Lsc2IYvDKJb41lTrKbW2T5tBcoUtbs2q1GynSGxq1A1ZkE7snqzp7VFuY6a+eUb/0kpoTIkcbwsIaV7nvgSFUw7yNxPmZfinLpirU8ygTILn8YSw9PcmshHg3K8c/i0oVg6108+crr7I1ocWITf5s2U4Hx2d8IRhDQIDAQABAoIBAHepJ/bRTkL6p1qFOdHfr4Bs9YucG6BZATvAePeEvl2uF/6cY5isjYzFMXnC2sdlI+LHhdn5luK0rENfDyVrQ3waQIJ7S3S/1ZTdtNcSwlOeCRw/5LJGF1vmyD7gjh8KPOhvH8U32drnTEzlPzrjovB/QZc8wBoc7PKG33sfM/DFXHmqdtJpzhqCzR8Pya7jd2zcZhOby4GiDdhqJqHsUOnB8WOrb9+q6iTOenwAKqcj8k1ZLnKrKD4PYuoQ2UPDDb6zYF4CRxOF/CDmh5uqDxZe0WLCCMuGB5HpWeOvLvwWRYy0brDxU9F7280FzPSN2m138ioZwTUjChMb4ot5iYECgYEAxvgv9izjz2PMgXtS6/gCGGgSeE8Sk11gSfpF1aCzLO4x7sYlvR41/VJoWb6akO+FTBzjJQ48TNHANh3HEVciSISIWMD/iZjHd5SgQE/3Vf13ikYlvG3eDwhUTjkRO3hlJouTb7jNO1JzQDTiDnU65nz3WVEeQp2jxw2YULixeEsCgYEAyXpamPVj7rJbLYYtLoweQApgH4LJQTipyysUU6dm8zxWt6mNFLU2rSH3bQj+W2hgNKwftyD5OOz0BrRM533WVt4gLGzku35XwcGEng81R7PB4wySOF7QQvNobsWqm6sr0dtczfWMZRDwx4czbyx0mEXWkZ4l7P1cWrVlSw3N5QcCgYBu1bQJ4umoDkTOX/9KGSY5qEeZoxqK4noP241pOhJ1Vd6UzuYY2ipjCbO9QlLhp7tOMc1KSArJFBKJUr8gZrRfRwyYvDHc2TFL6Iv4J1N1IDOl3/uHYoBPSWmFBX8W7LMT7K5djsksYXp36r1+JkmAOV6j72721s9zw5v0Y13gzwKBgEbvfypPa2nE/fkfPpUe3B+sB3/Qqk7+Rjmz5yo0zDhjTBzJ41QhISj/xn9rJTLFoumomFn/j/+M3bXmkRUH5wkal7VMeZPRvdAH9Es6C4Y9McxgxrJ2H1kTHfeyPIkmUP1IAHq7Mzz6I+v8HA3OVxatsAgA6FVyNqvxJcKxD4bNAoGAWyjxJZiszY/2COAdjT3QWCpCDtoCPdFxr98GYXQx3uIEtG50/ckMs5iAFd4Sz1f83fJ+1mqP4CvxDzS8461W0lhcwEe3wsRt1kuZ8hEICQ5vckKW5o0MvyzSXdfbBqf7iCygKDXNMXDX4qhcQ17ziptq2sIBSkmS+dY+NKw7Uys=")

if __name__ == '__main__':
    unittest.main()
